process {
    maxRetries    = 0
    maxErrors     = '-1'

    withLabel:process_single {
      cpus   = { 1 }
      memory = { 6.GB * task.attempt }
      time   = { 10.m * task.attempt }
    }
    withLabel:process_low {
        cpus   = { 2     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 2.h   * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 2     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 4.h   * task.attempt }
    }
    withLabel:process_high {
        cpus   = { 2    * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 16.h  * task.attempt }
    }
    withLabel:process_long {
        time   = { 20.h  * task.attempt }
    }
    withLabel:process_high_memory {
        memory = { 12.GB * task.attempt }
    }
	withName:amrfinderplus {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:bbduk {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:blastn {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:blobtools_create {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:blobtools_plot {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:blobtools_view {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:circulocov {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:core_genome_evaluation {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:datasets_download {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:datasets_summary {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:download_sra {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:drprg {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:elgato {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:emmtyper {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:fastani {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:fastp {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:fastqc {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:flag {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:heatcluster {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:iqtree2 {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:json_convert {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:kaptive {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:kleborate {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:kraken2 {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mash_dist {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mash_err {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mash_sketch_fasta {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mash_sketch_fastq {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mashtree {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mlst {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mqc_prep {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:multiqc {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:mykrobe {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:names {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:panaroo {
		publishDir = { 
			params.outdir, 
			mode: 'link', 
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
			pattern: "panaroo/core_gene_alignment.aln"
			}
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:pbptyper {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:phytreeviz {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:plasmidfinder {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:prokka {
		publishDir = { 
			params.outdir, 
			mode: 'link', 
			saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
			pattern: "gff/*.gff"
			}
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:quast {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:references {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:seqsero2 {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:serotypefinder {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:shigatyper {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:snp_dists {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:spades {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:species {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:summary {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
	withName:versions {
		errorStrategy = { task.attempt < 2 ? 'retry' : 'terminate'}
	}
}
