//# Instructions --------------------------------------------
//# We think it's great that you want to adjust some paramaters.
//# This is very useful when running this on the cloud.
//# This is especially useful for the following processes:
//#     - params.kraken2_db to specify where the kraken2 database is on your system
//# Right now, most everything is commented out with '//'.
//# To adjust a parameter, remove the '//' from in front of a param and replace the value
//# with the one that suits your needs.
//# Don't hesitate to ask for assistance at https://github.com/UPHL-BioNGS/Grandeur/issues
//# if something doesn't work (also, please include a copy of your config file).

//# Docker Params -------------------------------------------
//docker.enabled                  = true
//docker.runOptions               = '-u \$(id -u):\$(id -g)'
//docker.sudo                     = false
//docker.temp                     = /tmp
//docker.remove                   = true
//docker.registry                 = ''
//docker.fixOwnership             = true
//docker.engineOptions            = ''
//docker.mountFlags               = ''

//# Singularity Params --------------------------------------
//singularity.enabled             = true
//singularity.autoMounts          = true
//singularity.runOptions          = ""
//process.stageInMode             = "link"
//singularity.engineOptions       = ''
//singularity.cacheDir            = ''

//# AWS Batch Params ----------------------------------------
//process.executor                = 'awsbatch'
//process.queue                   = ''
//aws.batch.cliPath               = '/home/ec2-user/miniconda/bin/aws'
//aws.region                      = 'us-east-1'
//workDir                         = 's3://'

//# Google Cloud Params -------------------------------------
//process.executor                = ''
//google.project                  = ''
//google.location                 = ''
//google.region                   = ''
//workDir                         = ''
//google.lifeSciences.bootDiskSize = 50.GB

//# Nextflow Tower ------------------------------------------
//tower.accessToken               = ''
//tower.enabled                   = true

//# Adjustable Workflow parameters ---------------------------
//params.reads                    = 'reads'
//params.gff                      = 'gff'
//params.fastas                   = 'fastas'
//params.outdir                   = 'grandeur'
//params.sample_sheet             = 'sample_sheet.csv'

//# Basic CPU usage grouping
//params.maxcpus                  = 12
//params.medcpus                  = 4

//# minimum number of reads in fastq files
//params.minimum_reads              = 10000

//# directories for linking workflows
//params.donut_falls_wf             = false

//# external reference files and databases
//# WARNING : workflow.projectDir is not evaulated in a config file
//params.kraken2_db                 = ""
//params.blast_db                   = ""
//params.blast_db_type              = "nt"
//params.mash_db                    = ""
//params.fastani_ref                = "<path to fasta>"
//params.fastani_ref_list           = "<path to file with paths to fastas>
//params.genome_sizes               = workflow.projectDir + "/configs/genome_sizes.json"       

//# SRA accessions mainly for testing
//params.sra_accessions             = []

//# Choosing dynamic references vs static references for fastani
//params.current_datasets           = true

//# Allowing phylogenetic anslysis
//params.msa                        = false

//# commandline options for the various processes with their default values
//params.amrfinderplus_options      = ""
//params.bbduk_options              = "k=31 hdist=1"
//params.bbmap_options              = ""
//params.blast_db_type              = "nt"
//params.blastn_options             = "-max_target_seqs 10 -max_hsps 1 -evalue 1e-25"
//params.blobtools_create_options   = ""
//params.blobtools_view_options     = ""
//params.blobtools_plot_options     = "--format png -r species"
//params.blobtools_bbmap_options    = ""
//params.current_datasets           = false
//params.datasets_max_genomes       = 5
//params.emmtyper_options           = ""
//params.extras                     = true
//params.fastani_include            = true
//params.fastani_options            = "--matrix"
//params.fasterqdump_options        = ""
//params.fastp_options              = "--detect_adapter_for_pe"
//params.fastqc_options             = ""
//params.iqtree2_options            = "-t RANDOM -m GTR+F+I -bb 1000 -alrt 1000"
//params.iqtree2_outgroup           = ""
//params.kaptive_options            = ""
//params.kleborate_options          = "-all"
//params.kraken2_options            = ""
//params.legsta_options             = ""
//params.mash_sketch_options        = "-m 2"
//params.mash_dist_options          = "-v 0 -d 0.5"
//params.mash_max_hits              = 25
//params.mlst_options               = ""
//params.multiqc_options            = ""
//params.pbptyper_options           = ""
//params.plasmidfinder_options      = ""
//params.prokka_options             = "--mincontiglen 500 --compliant --locustag locus_tag --centre STAPHB"
//params.quast_options              = ""
//params.roary_options              = ""
//params.roary_min_genes            = 1500
//params.seqsero2_options           = "-m a -b mem"
//params.serotypefinder_options     = ""
//params.shigatyper_options         = ""
//params.snp_dists_options          = "-c"
//params.spades_options             = "--isolate"

//process {
//# final directory
// publishDir = [ path: params.outdir, mode: 'copy' ]
//
//# cpu management
//  withLabel: maxcpus {
//    cpus = params.maxcpus
//  }
//  withLabel: medcpus {
//    cpus = params.medcpus
//  }
//
//# processes
//	withName:amrfinderplus{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/ncbi-amrfinderplus:3.11.18-2023-08-08.2"
//		maxForks = "10"
//	}
//	withName:bbduk{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/bbtools:39.01"
//		maxForks = "10"
//	}
//	withName:bbmap{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/bbtools:39.01"
//		maxForks = "10"
//	}
//	withName:blastn{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/blast:2.14.0"
//		maxForks = "10"
//	}
//	withName:blobtools_create{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "chrishah/blobtools:v1.1.1"
//		maxForks = "10"
//	}
//	withName:blobtools_plot{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "chrishah/blobtools:v1.1.1"
//		maxForks = "10"
//	}
//	withName:blobtools_view{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "chrishah/blobtools:v1.1.1"
//		maxForks = "10"
//	}
//	withName:datasets_download{
//		label = "medcpus"
//		publishDir = "= [ path: grandeur, mode: 'copy', pattern: "logs/*/*log" ]"
//		container = "quay.io/uphl/datasets:15.12.0"
//		maxForks = "10"
//	}
//	withName:datasets_summary{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/datasets:15.12.0"
//		maxForks = "10"
//	}
//	withName:download_sra{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/bios/sra-tools:2.11.0--pl5321ha49a11a_3"
//		maxForks = "10"
//	}
//	withName:emmtyper{
//		publishDir = "path: params.outdir, mode: 'copy'"
//		container = "staphb/emmtyper:0.2.0"
//		maxForks = "10"
//	}
//	withName:fastani{
//		label = "medcpus"
//		publishDir = "path: params.outdir, mode: 'copy', pattern: 'logs/*/*log"
//		publishDir = "path: params.outdir, mode: 'copy', pattern: 'fastani/*"
//		container = "staphb/fastani:1.34"
//		maxForks = "10"
//	}
//	withName:fastp{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/fastp:0.23.4"
//		maxForks = "10"
//	}
//	withName:fastqc{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/fastqc:0.12.1"
//		maxForks = "10"
//	}
//	withName:fastqscan{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/fastq-scan:1.0.1"
//		maxForks = "10"
//	}
//	withName:flag{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:iqtree2{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/iqtree2:2.2.2.6"
//		maxForks = "10"
//	}
//	withName:kaptive{
//		publishDir = "path: params.outdir, mode: 'copy'"
//		container = "staphb/kaptive:2.0.5"
//		maxForks = "10"
//	}
//	withName:kleborate{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/kleborate:2.3.2"
//		maxForks = "10"
//	}
//	withName:kraken2{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/kraken2:2.1.3"
//		maxForks = "10"
//	}
//	withName:legsta{
//		publishDir = "path: params.outdir, mode: 'copy'"
//		container = "staphb/legsta:0.5.1"
//		maxForks = "10"
//	}
//	withName:mash{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/mash:2.3"
//		maxForks = "10"
//	}
//	withName:mlst{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/mlst:2.23.0-2023-07"
//		maxForks = "10"
//	}
//	withName:multiqc{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/bios/multiqc:1.12--pyhdfd78af_0"
//		maxForks = "10"
//	}
//	withName:names{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:pbptyper{
//		publishDir = "path: params.outdir, mode: 'copy'"
//		container = "staphb/pbptyper:1.0.4"
//		maxForks = "10"
//	}
//	withName:plasmidfinder{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/plasmidfinder:2.1.6"
//		maxForks = "10"
//	}
//	withName:prokka{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/prokka:1.14.6"
//		maxForks = "10"
//	}
//	withName:quast{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/quast:5.0.2"
//		maxForks = "10"
//	}
//	withName:representative{
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:roary{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/roary:3.13.0"
//		maxForks = "10"
//	}
//	withName:seqsero2{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/seqsero2:1.2.1"
//		maxForks = "10"
//	}
//	withName:serotypefinder{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/serotypefinder:2.0.1"
//		maxForks = "10"
//	}
//	withName:shigatyper{
//		label = "medcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/shigatyper:2.0.5"
//		maxForks = "10"
//	}
//	withName:size{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:snp_dists{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/snp-dists:0.8.2"
//		maxForks = "10"
//	}
//	withName:snp_matrix_heatmap{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:spades{
//		label = "maxcpus"
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "staphb/spades:3.15.5"
//		maxForks = "10"
//	}
//	withName:species{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//	withName:summary{
//		publishDir = "params.outdir, mode: 'copy'"
//		container = "quay.io/uphl/seaborn:0.12.2-2"
//		maxForks = "10"
//	}
//}
